# -*- coding: utf-8 -*-
"""main.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VhWCu0SLGDEPzqYeR8A0urFhTqcRFmjg
"""

import os   
import cv2  
import numpy as np  
from keras.models import model_from_json  
from keras.preprocessing import image
import os
import time

#path của file
file_path=os.path.dirname(os.path.abspath('__file__'))+os.sep
#path vào artifacts
artifacts_path=os.path.join(file_path,"artifacts")
#haar path
haar_path=os.path.join(artifacts_path,"haarcascade_frontalface_default.xml")
#ferjson path
ferjson_path=os.path.join(artifacts_path,"fer.json")
#fer h5 path
ferh5_path=os.path.join(artifacts_path,"fer.h5")
#croping face
face_classifier = cv2.CascadeClassifier(haar_path)


emotion_labels = ['Angry', 'Disgust', 'Fear', 'Happy', 'Neutral', 'Sad', 'Surprise']

#load model  
model = model_from_json(open(ferjson_path, "r").read())
#load weights  
model.load_weights(ferh5_path)

cap = cv2.VideoCapture(0)
loop_time=time.time()
while True:  
    ret,test_img=cap.read()# captures frame and returns boolean value and captured image  
    if not ret:  
        continue  
    gray_img= cv2.cvtColor(test_img, cv2.COLOR_BGR2GRAY)  

    faces_detected = face_classifier.detectMultiScale(gray_img, 1.32, 5)


    for (x,y,w,h) in faces_detected:  
        cv2.rectangle(test_img,(x,y),(x+w,y+h),(255,0,0),thickness=7)  
        roi_gray=gray_img[y:y+w,x:x+h]#cropping region of interest i.e. face area from  image  
        roi_gray=cv2.resize(roi_gray,(48,48))  
        img_pixels = image.img_to_array(roi_gray)  
        img_pixels = np.expand_dims(img_pixels, axis = 0)  
        img_pixels /= 255  

        predictions = model.predict(img_pixels)  

        #find max indexed array  
        max_index = np.argmax(predictions[0])  

        emotions = ('angry', 'disgust', 'fear', 'happy', 'sad', 'surprise', 'neutral')  
        predicted_emotion = emotions[max_index]  

        cv2.putText(test_img, predicted_emotion, (int(x), int(y)), cv2.FONT_HERSHEY_SIMPLEX, 1, (0,0,255), 2)  
        fps=1/(time.time()-loop_time)
        print(f'FPS {fps}')
        loop_time=time.time()
    resized_img = cv2.resize(test_img, (1000, 700))  
    cv2.imshow('Facial emotion analysis ',resized_img)  



    if cv2.waitKey(10) == ord('q'):#wait until 'q' key is pressed  
        break  

cap.release()  
cv2.destroyAllWindows